{"version":3,"sources":["Components/Feedback/styles.module.css","Components/Feedback/FeedbackOptions.js","Components/Statistics/Statistics.js","Components/Section/Section.js","Components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","FeedbackOptions","generateId","Math","floor","random","this","props","options","onLeaveFeedback","buttonNames","Object","keys","map","item","className","styles","btn","onClick","Component","Statistics","good","neutral","bad","total","positivePercentage","Section","title","children","defaultProps","Notification","message","App","state","clickHandle","evt","stateName","target","textContent","setState","console","log","countTotalFeedBack","values","reduce","acc","countPositiveFeedbackPercentage","percentage","totalScores","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,IAAM,sB,6ICgCTC,E,4MAvBbC,WAAa,WACX,OAAOC,KAAKC,MAAsB,IAAhBD,KAAKE,UAAoB,G,4CAG7C,WAAU,IAAD,OACP,EAAqCC,KAAKC,MAAlCC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,gBACXC,EAAcC,OAAOC,KAAKJ,GAChC,OACE,mCACGE,EAAYG,KAAI,SAAAC,GAAI,OACnB,wBACEC,UAAWC,IAAOC,IAElBC,QAAST,EAHX,SAKGK,GAHI,EAAKZ,uB,GAlBQiB,aC2BfC,E,4JAnBb,WACE,MAA0Dd,KAAKC,MAAvDc,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAAKC,EAA5B,EAA4BA,MAAOC,EAAnC,EAAmCA,mBAEnC,OACE,qCACE,gDAAmBD,KACnB,uCAAUH,KACV,0CAAaC,KACb,sCAASC,KACRE,EACC,mDAAsBA,EAAtB,OAEA,iE,GArBeN,aCAnBO,E,4JAUJ,WACE,OACE,oCACE,6BAAKpB,KAAKC,MAAMoB,QACfrB,KAAKC,MAAMqB,gB,GAdET,aAAhBO,EACGG,aAAe,CACpBF,MAAO,cAkBID,QCpBTI,E,4JAQJ,WACE,OAAO,4BAAIxB,KAAKC,MAAMwB,c,GATCZ,aAArBW,EACGD,aAAe,CACpBE,QAAS,iBAWED,QCkDAE,E,4MA3DbC,MAAQ,CACNZ,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPW,YAAc,SAAAC,GACZ,IAAMC,EAAYD,EAAIE,OAAOC,YAC7B,EAAKC,SAAL,eAAiBH,EAAY,EAAKH,MAAMG,GAAa,IACrDI,QAAQC,IAAR,eAAkB,S,EAGpBC,mBAAqB,WAEnB,OADkB/B,OAAOgC,OAAO,EAAKV,OACpBW,QAAO,SAACC,EAAK/B,GAAN,OAAgB+B,EAAO/B,IAAO,I,EAGxDgC,gCAAkC,SAAAtB,GAChC,GAAc,IAAVA,EACF,OAAO,EAET,IACMuB,EAAc,IAAMvB,EADJ,EAAKS,MAAMZ,KAEjC,OAAOlB,KAAKC,MAAM2C,I,4CAGpB,WACE,IACEd,EAIE3B,KAJF2B,MACAC,EAGE5B,KAHF4B,YACAQ,EAEEpC,KAFFoC,mBACAI,EACExC,KADFwC,gCAEIE,EAAcN,IAEpB,OACE,qCACE,cAAC,EAAD,CAASf,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBnB,QAASyB,EAAOxB,gBAAiByB,MAGpD,cAAC,EAAD,CAASP,MAAM,aAAf,SACIqB,EAGA,cAAC,EAAD,CACE3B,KAAMY,EAAMZ,KACZC,QAASW,EAAMX,QACfC,IAAKU,EAAMV,IACXC,MAAOkB,IACPjB,mBAAoBqB,EAAgCE,KAPtD,cAAC,EAAD,CAAcjB,QAAQ,+B,GA5ChBZ,aCFlB8B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f50ea224.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"styles_btn__14X_Y\"};","import { Component } from 'react';\nimport styles from './styles.module.css';\nimport PropTypes from 'prop-types';\n\nclass FeedbackOptions extends Component {\n  static propTypes = {\n    options: PropTypes.object.isRequired,\n    onLeaveFeedback: PropTypes.func.isRequired,\n  };\n\n  generateId = () => {\n    return Math.floor(Math.random() * 10000) + 1;\n  };\n\n  render() {\n    const { options, onLeaveFeedback } = this.props;\n    const buttonNames = Object.keys(options);\n    return (\n      <>\n        {buttonNames.map(item => (\n          <button\n            className={styles.btn}\n            key={this.generateId()}\n            onClick={onLeaveFeedback}\n          >\n            {item}\n          </button>\n        ))}\n      </>\n    );\n  }\n}\n\nexport default FeedbackOptions;\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Statistics extends Component {\n  static propTypes = {\n    good: PropTypes.number.isRequired,\n    neutral: PropTypes.number.isRequired,\n    bad: PropTypes.number.isRequired,\n    total: PropTypes.number.isRequired,\n    positivePercentage: PropTypes.number.isRequired,\n  };\n\n  render() {\n    const { good, neutral, bad, total, positivePercentage } = this.props;\n\n    return (\n      <>\n        <h3>Total Scores: {total}</h3>\n        <p>Good: {good}</p>\n        <p>Neutral: {neutral}</p>\n        <p>Bad: {bad}</p>\n        {positivePercentage ? (\n          <h3>Positive scores: {positivePercentage}%</h3>\n        ) : (\n          <h3>Positive scores: no have</h3>\n        )}\n      </>\n    );\n  }\n}\n\nexport default Statistics;\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Section extends Component {\n  static defaultProps = {\n    title: 'Your title',\n  };\n\n  static propTypes = {\n    title: PropTypes.string,\n    childer: PropTypes.node.isRequired,\n  };\n\n  render() {\n    return (\n      <section>\n        <h2>{this.props.title}</h2>\n        {this.props.children}\n      </section>\n    );\n  }\n}\n\nexport default Section;\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Notification extends Component {\n  static defaultProps = {\n    message: 'empty message',\n  };\n  static propTypes = {\n    message: PropTypes.string,\n  };\n\n  render() {\n    return <p>{this.props.message}</p>;\n  }\n}\n\nexport default Notification;\n","import { Component } from 'react';\nimport FeedbackOptions from './Components/Feedback/';\nimport Statistics from './Components/Statistics';\nimport Section from './Components/Section';\nimport Notification from './Components/Notification';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  clickHandle = evt => {\n    const stateName = evt.target.textContent;\n    this.setState({ [stateName]: this.state[stateName] + 1 });\n    console.log(this, 'this');\n  };\n\n  countTotalFeedBack = () => {\n    const allScores = Object.values(this.state);\n    return allScores.reduce((acc, item) => (acc += item), 0);\n  };\n\n  countPositiveFeedbackPercentage = total => {\n    if (total === 0) {\n      return 0;\n    }\n    const positiveScore = this.state.good;\n    const percentage = (100 / total) * positiveScore;\n    return Math.floor(percentage);\n  };\n\n  render() {\n    const {\n      state,\n      clickHandle,\n      countTotalFeedBack,\n      countPositiveFeedbackPercentage,\n    } = this;\n    const totalScores = countTotalFeedBack();\n\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions options={state} onLeaveFeedback={clickHandle} />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {!totalScores ? (\n            <Notification message=\"No feedback given\" />\n          ) : (\n            <Statistics\n              good={state.good}\n              neutral={state.neutral}\n              bad={state.bad}\n              total={countTotalFeedBack()}\n              positivePercentage={countPositiveFeedbackPercentage(totalScores)}\n            />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}